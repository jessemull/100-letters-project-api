AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  UserPoolId:
    Type: String
    Description: Cognito User Pool ID

Resources:
  OneHundredLettersApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: OneHundredLettersApi
      Description: API for managing correspondence and recipients

  ApiGatewayAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CognitoAuthorizer
      Type: COGNITO_USER_POOLS
      RestApiId: !Ref OneHundredLettersApi
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}"

  # Correspondence Resources/Methods

  ApiGatewayCorrespondence:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ParentId: !GetAtt OneHundredLettersApi.RootResourceId
      PathPart: "correspondence"
      
  ApiGatewayGetCorrespondencesMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ResourceId: !Ref ApiGatewayCorrespondence
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCorrespondences/invocations"

  ApiGatewayCorrespondenceUpdateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ResourceId: !Ref ApiGatewayCorrespondence
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref ApiGatewayAuthorizer
      HttpMethod: PUT
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:updateCorrespondence/invocations"

  ApiGatewayCorrespondenceCreateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ResourceId: !Ref ApiGatewayCorrespondence
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref ApiGatewayAuthorizer
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:createCorrespondence/invocations"

  ApiGatewayGetCorrespondencesById:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ParentId: !Ref ApiGatewayCorrespondence
      PathPart: "{id}"
      
  ApiGatewayGetCorrespondencesByIdMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ResourceId: !Ref ApiGatewayGetCorrespondencesById
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCorrespondencesById/invocations"
      RequestParameters:
        method.request.path.id: true

  ApiGatewayCorrespondenceDeleteMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ResourceId: !Ref ApiGatewayGetCorrespondencesById
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref ApiGatewayAuthorizer
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deleteCorrespondence/invocations"
      RequestParameters:
        method.request.path.id: true

  LambdaInvokePermissionGetCorrespondences:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCorrespondences"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/GET/*"
  
  LambdaInvokePermissionGetCorrespondencesById:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCorrespondencesById"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/GET/*"
  
  LambdaInvokePermissionCreateCorrespondence:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:createCorrespondence"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/POST/*"
  
  LambdaInvokePermissionUpdateCorrespondence:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:updateCorrespondence"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/PUT/*"

  LambdaInvokePermissionDeleteCorrespondence:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deleteCorrespondence"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/DELETE/*"

  # Recipient Resources/Methods

  ApiGatewayGetRecipients:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ParentId: !GetAtt OneHundredLettersApi.RootResourceId
      PathPart: "recipient"

  ApiGatewayGetRecipientsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ResourceId: !Ref ApiGatewayGetRecipients
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getRecipients/invocations"
  
  ApiGatewayGetRecipientById:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ParentId: !Ref ApiGatewayGetRecipients
      PathPart: "{id}"

  ApiGatewayGetRecipientByIdMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref OneHundredLettersApi
      ResourceId: !Ref ApiGatewayGetRecipientById
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getRecipientById/invocations"
      RequestParameters:
        method.request.path.id: true
  
  LambdaInvokePermissionGetRecipientById:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getRecipientById"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/GET/*"
  
  LambdaInvokePermissionGetRecipients:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getRecipients"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/GET/*"