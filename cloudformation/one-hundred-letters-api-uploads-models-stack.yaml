AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Default: "dev"
    Description: "The environment for the deployment (dev or prod)"
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: "Must be either 'dev' or 'prod'."

Mappings:
  EnvCapitalization:
    dev:
      Capitalized: "Dev"
    prod:
      Capitalized: "Prod"

Resources:
  UploadsModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "UploadsModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          correspondenceId:
            type: "string"
            format: "uuid"
          letterId:
            type: "string"
            format: "uuid"
          mimeType:
            type: "string"
            enum:
              - image/jpeg
              - image/png
              - image/webp
              - image/gif
          view:
            type: "string"
            enum:
              - ENVELOPE_FRONT
              - ENVELOPE_BACK
              - LETTER_FRONT
              - LETTER_BACK
              - OTHER
        required: ["correspondenceId", "letterId", "mimeType", "view"]

  UploadsResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "UploadsResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondenceId:
                type: "string"
                format: "uuid"
              imageURL:
                type: "string"
                format: "uri"
                example: "https://onehundredletters.com/images/52b249d0-7b41-4f58-bf49-d72d592f84ff/42b249d0-7b41-4f58-bf49-d72d592f84ff/ENVELOPE_FRONT/67b249d0-7b41-4f58-bf49-d72d592f84ff.webp"
              letterId:
                type: "string"
                format: "uuid"
              mimeType:
                type: "string"
                enum:
                  - image/jpeg
                  - image/png
                  - image/webp
                  - image/gif
              signedUrl:
                type: "string"
                format: "uri"
                example: "https://your-bucket.s3.amazonaws.com/52b249d0-7b41-4f58-bf49-d72d592f84ff/ENVELOPE_FRONT/67b249d0.webp?X-Amz-Algorithm=AWS4-HMAC-SHA256..."
              uuid:
                type: "string"
                format: "uuid"
              view:
                type: "string"
                enum:
                  - ENVELOPE_FRONT
                  - ENVELOPE_BACK
                  - LETTER_FRONT
                  - LETTER_BACK
                  - OTHER
            required: ["correspondenceId", "imageURL", "letterId", "mimeType", "signedUrl", "uuid", "view"]
          message:
            type: "string"
        required: ["data", "message"]

  DeleteUploadResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "DeleteUploadResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          message:
            type: "string"
        required: ["message"]

Outputs:
  UploadsModelOutput:
    Value: !Ref UploadsModel
    Export:
      Name: !Sub uploads-model-${Environment}
  UploadsResponseModelOutput:
    Value: !Ref UploadsResponseModel
    Export:
      Name: !Sub uploads-response-model-${Environment}
  DeleteUploadResponseModelOutput:
    Value: !Ref DeleteUploadResponseModel
    Export:
      Name: !Sub delete-upload-response-model-${Environment}
