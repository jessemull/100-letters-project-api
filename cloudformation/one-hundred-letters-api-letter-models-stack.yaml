AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Default: "dev"
    Description: "The environment for the deployment (dev or prod)"
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: "Must be either 'dev' or 'prod'."

Mappings:
  EnvCapitalization:
    dev:
      Capitalized: "Dev"
    prod:
      Capitalized: "Prod"

Resources:
  # <------------------- CREATE Letter ------------------->

  LetterCreateRequestModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "LetterCreateModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          correspondenceId:
            type: "string"
            format: "uuid"
          description:
            type: "string"
          imageURLs:
            type: "array"
            items:
              type: "object"
              properties:
                caption: 
                  type: "string"
                dateUploaded:
                  type: "string"
                  format: "date-time"
                fileKey:
                  type: "string"
                id:
                  type: "string"
                  format: "uuid"
                mimeType: 
                  type: "string"
                  enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                sizeInBytes: 
                  type: "number"
                uploadedBy: 
                  type: "string"
                url: 
                  type: "string"
                urlThumbnail: 
                  type: "string"
                view:
                  type: "string"
                  enum:
                    - ENVELOPE_FRONT
                    - ENVELOPE_BACK
                    - LETTER_FRONT
                    - LETTER_BACK
                    - OTHER
              required: ["fileKey", "id", "url", "urlThumbnail", "view"]
          method:
            type: "string"
            enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
          receivedAt:
            type: "string"
            format: "date-time"
          sentAt:
            type: "string"
            format: "date-time"
          status:
            type: "string"
            enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
          text:
            type: "string"
          title:
            type: "string"
          type:
            type: "string"
            enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
        required: ["correspondenceId", "imageURLs", "method", "status", "text", "title", "type"]
  
  LetterCreateResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "LetterCreateResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondenceId:
                type: "string"
                format: "uuid"
              createdAt:
                type: "string"
                format: "date-time"
              description:
                type: "string"
              imageURLs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    caption: 
                      type: "string"
                    dateUploaded:
                      type: "string"
                      format: "date-time"
                    fileKey:
                      type: "string"
                    id:
                      type: "string"
                      format: "uuid"
                    mimeType: 
                      type: "string"
                      enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                    sizeInBytes: 
                      type: "number"
                    uploadedBy: 
                      type: "string"
                    url: 
                      type: "string"
                    urlThumbnail: 
                      type: "string"
                    view:
                      type: "string"
                      enum:
                        - ENVELOPE_FRONT
                        - ENVELOPE_BACK
                        - LETTER_FRONT
                        - LETTER_BACK
                        - OTHER
                  required: ["fileKey", "id", "url", "urlThumbnail", "view"]
              letterId:
                type: "string"
                format: "uuid"
              method:
                type: "string"
                enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
              receivedAt:
                type: "string"
                format: "date-time"
              sentAt:
                type: "string"
                format: "date-time"
              status:
                type: "string"
                enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
              text:
                type: "string"
              title:
                type: "string"
              type:
                type: "string"
                enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
              updatedAt:
                type: "string"
                format: "date-time"
            required: ["correspondenceId", "createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
          message:
            type: string
        required: ["data", "message"]

  # <------------------- UPDATE Letter ------------------->

  LetterUpdateRequestModel:
      Type: AWS::ApiGateway::Model
      Properties:
        RestApiId: 
          Fn::ImportValue: 
            !Sub "one-hundred-letters-api-${Environment}"
        ContentType: "application/json"
        Name: !Sub 
        - "LetterUpdateModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
        Schema:
          $schema: "http://json-schema.org/draft-04/schema#"
          type: "object"
          properties:
            correspondenceId:
              type: "string"
              format: "uuid"
            description:
              type: "string"
            imageURLs:
              type: "array"
              items:
                type: "object"
                properties:
                  caption: 
                    type: "string"
                  dateUploaded:
                    type: "string"
                    format: "date-time"
                  fileKey:
                    type: "string"
                  id:
                    type: "string"
                    format: "uuid"
                  mimeType: 
                    type: "string"
                    enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                  sizeInBytes: 
                    type: "number"
                  uploadedBy: 
                    type: "string"
                  url: 
                    type: "string"
                  urlThumbnail: 
                    type: "string"
                  view:
                    type: "string"
                    enum:
                      - ENVELOPE_FRONT
                      - ENVELOPE_BACK
                      - LETTER_FRONT
                      - LETTER_BACK
                      - OTHER
                required: ["fileKey", "id", "url", "urlThumbnail", "view"]
            letterId:
              type: "string"
              format: "uuid"
            method:
              type: "string"
              enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
            receivedAt:
              type: "string"
              format: "date-time"
            sentAt:
              type: "string"
              format: "date-time"
            status:
              type: "string"
              enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
            text:
              type: "string"
            title:
              type: "string"
            type:
              type: "string"
              enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
          required: ["correspondenceId", "imageURLs", "letterId", "method", "status", "text", "title", "type"]
  
  LetterUpdateResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "LetterUpdateResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondenceId:
                type: "string"
                format: "uuid"
              createdAt:
                type: "string"
                format: "date-time"
              description:
                type: "string"
              imageURLs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    caption: 
                      type: "string"
                    dateUploaded:
                      type: "string"
                      format: "date-time"
                    fileKey:
                      type: "string"
                    id:
                      type: "string"
                      format: "uuid"
                    mimeType: 
                      type: "string"
                      enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                    sizeInBytes: 
                      type: "number"
                    uploadedBy: 
                      type: "string"
                    url: 
                      type: "string"
                    urlThumbnail: 
                      type: "string"
                    view:
                      type: "string"
                      enum:
                        - ENVELOPE_FRONT
                        - ENVELOPE_BACK
                        - LETTER_FRONT
                        - LETTER_BACK
                        - OTHER
                  required: ["fileKey", "id", "url", "urlThumbnail", "view"]
              letterId:
                type: "string"
                format: "uuid"
              method:
                type: "string"
                enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
              receivedAt:
                type: "string"
                format: "date-time"
              sentAt:
                type: "string"
                format: "date-time"
              status:
                type: "string"
                enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
              text:
                type: "string"
              title:
                type: "string"
              type:
                type: "string"
                enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
              updatedAt:
                type: "string"
                format: "date-time"
            required: ["correspondenceId", "createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
          message:
            type: string
        required: ["data", "message"]

  # <------------------- GET Letters ------------------->

  LetterResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "LetterResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "array"
            items:
              type: "object"
              properties:
                correspondenceId:
                  type: "string"
                  format: "uuid"
                createdAt:
                  type: "string"
                  format: "date-time"
                description:
                  type: "string"
                imageURLs:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      caption: 
                        type: "string"
                      dateUploaded:
                        type: "string"
                        format: "date-time"
                      fileKey:
                        type: "string"
                      id:
                        type: "string"
                        format: "uuid"
                      mimeType: 
                        type: "string"
                        enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                      sizeInBytes: 
                        type: "number"
                      uploadedBy: 
                        type: "string"
                      url: 
                        type: "string"
                      urlThumbnail: 
                        type: "string"
                      view:
                        type: "string"
                        enum:
                          - ENVELOPE_FRONT
                          - ENVELOPE_BACK
                          - LETTER_FRONT
                          - LETTER_BACK
                          - OTHER
                    required: ["fileKey", "id", "url", "urlThumbnail", "view"]
                letterId:
                  type: "string"
                  format: "uuid"
                method:
                  type: "string"
                  enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
                receivedAt:
                  type: "string"
                  format: "date-time"
                sentAt:
                  type: "string"
                  format: "date-time"
                status:
                  type: "string"
                  enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
                text:
                  type: "string"
                title:
                  type: "string"
                type:
                  type: "string"
                  enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
                updatedAt:
                  type: "string"
                  format: "date-time"
              required: ["correspondenceId", "createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
          lastEvaluatedKey:
            type: "string"
          message:
            type: string
        required: ["data", "lastEvaluatedKey", "message"]

  # <------------------- GET Letter By ID ------------------->

  LetterByIdResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "LetterByIdResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondenceId:
                type: "string"
                format: "uuid"
              createdAt:
                type: "string"
                format: "date-time"
              description:
                type: "string"
              imageURLs:
                type: "array"
                items:
                  type: "object"
                  properties:
                    caption: 
                      type: "string"
                    dateUploaded:
                      type: "string"
                      format: "date-time"
                    fileKey:
                      type: "string"
                    id:
                      type: "string"
                      format: "uuid"
                    mimeType: 
                      type: "string"
                      enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                    sizeInBytes: 
                      type: "number"
                    uploadedBy: 
                      type: "string"
                    url: 
                      type: "string"
                    urlThumbnail: 
                      type: "string"
                    view:
                      type: "string"
                      enum:
                        - ENVELOPE_FRONT
                        - ENVELOPE_BACK
                        - LETTER_FRONT
                        - LETTER_BACK
                        - OTHER
                  required: ["fileKey", "id", "url", "urlThumbnail", "view"]
              letterId:
                type: "string"
                format: "uuid"
              method:
                type: "string"
                enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
              receivedAt:
                type: "string"
                format: "date-time"
              sentAt:
                type: "string"
                format: "date-time"
              status:
                type: "string"
                enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
              text:
                type: "string"
              title:
                type: "string"
              type:
                type: "string"
                enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
              updatedAt:
                type: "string"
                format: "date-time"
            required: ["correspondenceId", "createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
          message:
            type: string
        required: ["data", "message"]

  # <------------------- DELETE Letters ------------------->

  LetterDeleteResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "LetterDeleteResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              letterId:
                type: "string"
                format: "uuid"
            required: ["letterId"]
          message:
            type: "string"
        required: ["data", "message"]

Outputs:
  LetterCreateRequestModelOutput:
    Value: !Ref LetterCreateRequestModel
    Export:
      Name: !Sub letter-create-request-model-${Environment}
  LetterUpdateRequestModelOutput:
    Value: !Ref LetterUpdateRequestModel
    Export:
      Name: !Sub letter-update-request-model-${Environment}
  LetterResponseModelOutput:
    Value: !Ref LetterResponseModel
    Export:
      Name: !Sub letter-response-model-${Environment}
  LetterCreateResponseModelOutput:
    Value: !Ref LetterCreateResponseModel
    Export:
      Name: !Sub letter-create-response-model-${Environment}
  LetterUpdateResponseModelOutput:
    Value: !Ref LetterUpdateResponseModel
    Export:
      Name: !Sub letter-update-response-model-${Environment}
  LetterByIdResponseModelOutput:
    Value: !Ref LetterByIdResponseModel
    Export:
      Name: !Sub letter-by-id-response-model-${Environment}
  LetterDeleteResponseModelOutput:
    Value: !Ref LetterDeleteResponseModel
    Export:
      Name: !Sub letter-delete-response-model-${Environment}