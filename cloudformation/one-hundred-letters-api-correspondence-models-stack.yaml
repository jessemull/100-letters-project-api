AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Default: "dev"
    Description: "The environment for the deployment (dev or prod)"
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: "Must be either 'dev' or 'prod'."

Mappings:
  EnvCapitalization:
    dev:
      Capitalized: "Dev"
    prod:
      Capitalized: "Prod"

Resources:
  # <------------------- UPDATE Correspondence ------------------->

  CorrespondenceCreateRequestModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "CorrespondenceCreateModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          correspondence:
            type: "object"
            properties:
              reason:
                type: "object"
                properties:
                  description:
                    type: "string"
                  domain:
                    type: "string"
                  impact:
                    type: "string"
                    enum: ["HIGH", "MEDIUM", "LOW"]
                required: ["description", "domain", "impact"]
              status:
                type: "string"
                enum: ["COMPLETED", "PENDING", "RESPONDED", "UNSENT"]
              title:
                type: "string"
            required: ["reason", "status", "title"]
          recipient:
            type: "object"
            properties:
              address:
                type: "object"
                properties:
                  city: 
                    type: "string"
                  country: 
                    type: "string"
                  postalCode:
                    type: "string"
                  state:
                    type: "string"
                  street:
                    type: "string"
              firstName:
                type: "string"
              lastName:
                type: "string"
              description:
                type: "string"
              occupation:
                type: "string"
              organization:
                type: "string"
            required: ["address", "firstName", "lastName"]
          letters:
            type: "array"
            items:
              type: "object"
              properties:
                description:
                  type: "string"
                imageURLs:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      caption: 
                        type: "string"
                      dateUploaded:
                        type: "string"
                        format: "date-time"
                      fileKey:
                        type: "string"
                      id:
                        type: "string"
                        format: "uuid"
                      mimeType: 
                        type: "string"
                        enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                      sizeInBytes: 
                        type: "number"
                      uploadedBy: 
                        type: "string"
                      url: 
                        type: "string"
                      urlThumbnail: 
                        type: "string"
                      view: 
                        type: "string"
                    required: ["fileKey", "id", "url", "urlThumbnail", "view"]
                method:
                  type: "string"
                  enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
                receivedAt:
                  type: "string"
                  format: "date-time"
                sentAt:
                  type: "string"
                  format: "date-time"
                status:
                  type: "string"
                  enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
                text:
                  type: "string"
                title:
                  type: "string"
                type:
                  type: "string"
                  enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
              required: ["imageURLs", "method", "status", "text", "title", "type"]
        required: ["correspondence", "recipient", "letters"]
  
  CorrespondenceCreateResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "CorrespondenceCreateResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondence:
                type: "object"
                properties:
                  correspondenceId:
                    type: "string"
                    format: "uuid"
                  createdAt:
                    type: "string"
                    format: "date-time"
                  reason:
                    type: "object"
                    properties:
                      description:
                        type: "string"
                      domain:
                        type: "string"
                      impact:
                        type: "string"
                        enum: ["HIGH", "MEDIUM", "LOW"]
                    required: ["description", "domain", "impact"]
                  status:
                    type: "string"
                    enum: ["COMPLETED", "PENDING", "RESPONDED", "UNSENT"]
                  title:
                    type: "string"
                  updatedAt:
                    type: "string"
                    format: "date-time"
                required: ["correspondenceId", "createdAt", "reason", "status", "title", "updatedAt"]
              recipient:
                type: "object"
                properties:
                  recipientId:
                    type: "string"
                    format: "uuid"
                  address:
                    type: "object"
                    properties:
                      city: 
                        type: "string"
                      country: 
                        type: "string"
                      postalCode:
                        type: "string"
                      state:
                        type: "string"
                      street:
                        type: "string"
                  createdAt:
                    type: "string"
                    format: "date-time"
                  firstName:
                    type: "string"
                  lastName:
                    type: "string"
                  description:
                    type: "string"
                  occupation:
                    type: "string"
                  organization:
                    type: "string"
                  updatedAt:
                    type: "string"
                    format: "date-time"
                required: ["address", "createdAt", "firstName", "lastName", "recipientId", "updatedAt"]
              letters:
                type: "array"
                items:
                  type: "object"
                  properties:
                    letterId:
                      type: "string"
                      format: "uuid"
                    createdAt:
                      type: "string"
                      format: "date-time"
                    description:
                      type: "string"
                    imageURLs:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          caption: 
                            type: "string"
                          dateUploaded:
                            type: "string"
                            format: "date-time"
                          fileKey:
                            type: "string"
                          id:
                            type: "string"
                            format: "uuid"
                          mimeType: 
                            type: "string"
                            enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                          sizeInBytes: 
                            type: "number"
                          uploadedBy: 
                            type: "string"
                          url: 
                            type: "string"
                          urlThumbnail: 
                            type: "string"
                          view: 
                            type: "string"
                        required: ["fileKey", "id", "url", "urlThumbnail", "view"]
                    method:
                      type: "string"
                      enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
                    receivedAt:
                      type: "string"
                      format: "date-time"
                    sentAt:
                      type: "string"
                      format: "date-time"
                    status:
                      type: "string"
                      enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
                    text:
                      type: "string"
                    title:
                      type: "string"
                    type:
                      type: "string"
                      enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
                    updatedAt:
                      type: "string"
                      format: "date-time"
                  required: ["createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
            required: ["correspondence", "recipient", "letters"]
          message:
            type: string
        required: ["data", "message"]

  # <------------------- UPDATE Correspondence ------------------->

  CorrespondenceUpdateRequestModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "CorrespondenceUpdateModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          correspondence:
            type: "object"
            properties:
              correspondenceId:
                type: "string"
                format: "uuid"
              reason:
                type: "object"
                properties:
                  description:
                    type: "string"
                  domain:
                    type: "string"
                  impact:
                    type: "string"
                    enum: ["HIGH", "MEDIUM", "LOW"]
                required: ["description", "domain", "impact"]
              status:
                type: "string"
                enum: ["COMPLETED", "PENDING", "RESPONDED", "UNSENT"]
              title:
                type: "string"
            required: ["correspondenceId", "reason", "status", "title"]
          recipient:
            type: "object"
            properties:
              recipientId:
                type: "string"
                format: "uuid"
              address:
                type: "object"
                properties:
                  city: 
                    type: "string"
                  country: 
                    type: "string"
                  postalCode:
                    type: "string"
                  state:
                    type: "string"
                  street:
                    type: "string"
              firstName:
                type: "string"
              lastName:
                type: "string"
              description:
                type: "string"
              occupation:
                type: "string"
              organization:
                type: "string"
            required: ["recipientId", "address", "firstName", "lastName"]
          letters:
            type: "array"
            items:
              type: "object"
              properties:
                letterId:
                  type: "string"
                  format: "uuid"
                description:
                  type: "string"
                imageURLs:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      caption: 
                        type: "string"
                      dateUploaded:
                        type: "string"
                        format: "date-time"
                      fileKey:
                        type: "string"
                      id:
                        type: "string"
                        format: "uuid"
                      mimeType: 
                        type: "string"
                        enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                      sizeInBytes: 
                        type: "number"
                      uploadedBy: 
                        type: "string"
                      url: 
                        type: "string"
                      urlThumbnail: 
                        type: "string"
                      view: 
                        type: "string"
                    required: ["fileKey", "id", "url", "urlThumbnail", "view"]
                method:
                  type: "string"
                  enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
                receivedAt:
                  type: "string"
                  format: "date-time"
                sentAt:
                  type: "string"
                  format: "date-time"
                status:
                  type: "string"
                  enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
                text:
                  type: "string"
                title:
                  type: "string"
                type:
                  type: "string"
                  enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
              required: ["imageURLs", "letterId", "method", "status", "text", "title", "type"]
        required: ["correspondence", "recipient", "letters"]
  
  CorrespondenceUpdateResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "CorrespondenceUpdateResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondence:
                type: "object"
                properties:
                  correspondenceId:
                    type: "string"
                    format: "uuid"
                  createdAt:
                    type: "string"
                    format: "date-time"
                  reason:
                    type: "object"
                    properties:
                      description:
                        type: "string"
                      domain:
                        type: "string"
                      impact:
                        type: "string"
                        enum: ["HIGH", "MEDIUM", "LOW"]
                    required: ["description", "domain", "impact"]
                  status:
                    type: "string"
                    enum: ["COMPLETED", "PENDING", "RESPONDED", "UNSENT"]
                  title:
                    type: "string"
                  updatedAt:
                    type: "string"
                    format: "date-time"
                required: ["correspondenceId", "createdAt", "reason", "status", "title", "updatedAt"]
              recipient:
                type: "object"
                properties:
                  recipientId:
                    type: "string"
                    format: "uuid"
                  address:
                    type: "object"
                    properties:
                      city: 
                        type: "string"
                      country: 
                        type: "string"
                      postalCode:
                        type: "string"
                      state:
                        type: "string"
                      street:
                        type: "string"
                  createdAt:
                    type: "string"
                    format: "date-time"
                  firstName:
                    type: "string"
                  lastName:
                    type: "string"
                  description:
                    type: "string"
                  occupation:
                    type: "string"
                  organization:
                    type: "string"
                  updatedAt:
                    type: "string"
                    format: "date-time"
                required: ["address", "createdAt", "firstName", "lastName", "recipientId", "updatedAt"]
              letters:
                type: "array"
                items:
                  type: "object"
                  properties:
                    letterId:
                      type: "string"
                      format: "uuid"
                    createdAt:
                      type: "string"
                      format: "date-time"
                    description:
                      type: "string"
                    imageURLs:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          caption: 
                            type: "string"
                          dateUploaded:
                            type: "string"
                            format: "date-time"
                          fileKey:
                            type: "string"
                          id:
                            type: "string"
                            format: "uuid"
                          mimeType: 
                            type: "string"
                            enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                          sizeInBytes: 
                            type: "number"
                          uploadedBy: 
                            type: "string"
                          url: 
                            type: "string"
                          urlThumbnail: 
                            type: "string"
                          view: 
                            type: "string"
                        required: ["fileKey", "id", "url", "urlThumbnail", "view"]
                    method:
                      type: "string"
                      enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
                    receivedAt:
                      type: "string"
                      format: "date-time"
                    sentAt:
                      type: "string"
                      format: "date-time"
                    status:
                      type: "string"
                      enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
                    text:
                      type: "string"
                    title:
                      type: "string"
                    type:
                      type: "string"
                      enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
                    updatedAt:
                      type: "string"
                      format: "date-time"
                  required: ["createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
            required: ["correspondence", "recipient", "letters"]
          message:
            type: string
        required: ["data", "message"]

  # <------------------- GET Correspondence ------------------->

  CorrespondenceResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "CorrespondenceResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "array"
            items:
              type: "object"
              properties:
                correspondence:
                  type: "object"
                  properties:
                    correspondenceId:
                      type: "string"
                      format: "uuid"
                    createdAt:
                      type: "string"
                      format: "date-time"
                    reason:
                      type: "object"
                      properties:
                        description:
                          type: "string"
                        domain:
                          type: "string"
                        impact:
                          type: "string"
                          enum: ["HIGH", "MEDIUM", "LOW"]
                      required: ["description", "domain", "impact"]
                    status:
                      type: "string"
                      enum: ["COMPLETED", "PENDING", "RESPONDED", "UNSENT"]
                    title:
                      type: "string"
                    updatedAt:
                      type: "string"
                      format: "date-time"
                  required: ["correspondenceId", "createdAt", "reason", "status", "title", "updatedAt"]
                recipient:
                  type: "object"
                  properties:
                    recipientId:
                      type: "string"
                      format: "uuid"
                    address:
                      type: "object"
                      properties:
                        city: 
                          type: "string"
                        country: 
                          type: "string"
                        postalCode:
                          type: "string"
                        state:
                          type: "string"
                        street:
                          type: "string"
                    createdAt:
                      type: "string"
                      format: "date-time"
                    firstName:
                      type: "string"
                    lastName:
                      type: "string"
                    description:
                      type: "string"
                    occupation:
                      type: "string"
                    organization:
                      type: "string"
                    updatedAt:
                      type: "string"
                      format: "date-time"
                  required: ["address", "createdAt", "firstName", "lastName", "recipientId", "updatedAt"]
                letters:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      letterId:
                        type: "string"
                        format: "uuid"
                      createdAt:
                        type: "string"
                        format: "date-time"
                      description:
                        type: "string"
                      imageURLs:
                        type: "array"
                        items:
                          type: "object"
                          properties:
                            caption: 
                              type: "string"
                            dateUploaded:
                              type: "string"
                              format: "date-time"
                            fileKey:
                              type: "string"
                            id:
                              type: "string"
                              format: "uuid"
                            mimeType: 
                              type: "string"
                              enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                            sizeInBytes: 
                              type: "number"
                            uploadedBy: 
                              type: "string"
                            url: 
                              type: "string"
                            urlThumbnail: 
                              type: "string"
                            view: 
                              type: "string"
                          required: ["fileKey", "id", "url", "urlThumbnail", "view"]
                      method:
                        type: "string"
                        enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
                      receivedAt:
                        type: "string"
                        format: "date-time"
                      sentAt:
                        type: "string"
                        format: "date-time"
                      status:
                        type: "string"
                        enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
                      text:
                        type: "string"
                      title:
                        type: "string"
                      type:
                        type: "string"
                        enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
                      updatedAt:
                        type: "string"
                        format: "date-time"
                    required: ["createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
              required: ["correspondence", "recipient", "letters"]
          lastEvaluatedKey:
            type: "string"
          message:
            type: string
        required: ["data", "lastEvaluatedKey", "message"]

  # <------------------- GET Correspondence By ID ------------------->

  CorrespondenceByIdResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "CorrespondenceByIdResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondence:
                type: "object"
                properties:
                  correspondenceId:
                    type: "string"
                    format: "uuid"
                  createdAt:
                    type: "string"
                    format: "date-time"
                  reason:
                    type: "object"
                    properties:
                      description:
                        type: "string"
                      domain:
                        type: "string"
                      impact:
                        type: "string"
                        enum: ["HIGH", "MEDIUM", "LOW"]
                    required: ["description", "domain", "impact"]
                  status:
                    type: "string"
                    enum: ["COMPLETED", "PENDING", "RESPONDED", "UNSENT"]
                  title:
                    type: "string"
                  updatedAt:
                    type: "string"
                    format: "date-time"
                required: ["correspondenceId", "createdAt", "reason", "status", "title", "updatedAt"]
              recipient:
                type: "object"
                properties:
                  recipientId:
                    type: "string"
                    format: "uuid"
                  address:
                    type: "object"
                    properties:
                      city: 
                        type: "string"
                      country: 
                        type: "string"
                      postalCode:
                        type: "string"
                      state:
                        type: "string"
                      street:
                        type: "string"
                  createdAt:
                    type: "string"
                    format: "date-time"
                  firstName:
                    type: "string"
                  lastName:
                    type: "string"
                  description:
                    type: "string"
                  occupation:
                    type: "string"
                  organization:
                    type: "string"
                  updatedAt:
                    type: "string"
                    format: "date-time"
                required: ["address", "createdAt", "firstName", "lastName", "recipientId", "updatedAt"]
              letters:
                type: "array"
                items:
                  type: "object"
                  properties:
                    letterId:
                      type: "string"
                      format: "uuid"
                    createdAt:
                      type: "string"
                      format: "date-time"
                    description:
                      type: "string"
                    imageURLs:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          caption: 
                            type: "string"
                          dateUploaded:
                            type: "string"
                            format: "date-time"
                          fileKey:
                            type: "string"
                          id:
                            type: "string"
                            format: "uuid"
                          mimeType: 
                            type: "string"
                            enum: ["image/jpeg", "image/png", "image/webp", "image/gif"]
                          sizeInBytes: 
                            type: "number"
                          uploadedBy: 
                            type: "string"
                          url: 
                            type: "string"
                          urlThumbnail: 
                            type: "string"
                          view: 
                            type: "string"
                        required: ["fileKey", "id", "url", "urlThumbnail", "view"]
                    method:
                      type: "string"
                      enum: ["TYPED", "HANDWRITTEN", "PRINTED", "DIGITAL", "OTHER"]
                    receivedAt:
                      type: "string"
                      format: "date-time"
                    sentAt:
                      type: "string"
                      format: "date-time"
                    status:
                      type: "string"
                      enum: ["PENDING", "SENT", "RECEIVED", "RESPONDED"]
                    text:
                      type: "string"
                    title:
                      type: "string"
                    type:
                      type: "string"
                      enum: ["MAIL", "EMAIL", "SMS", "OTHER"]
                    updatedAt:
                      type: "string"
                      format: "date-time"
                  required: ["createdAt", "imageURLs", "letterId", "method", "status", "text", "title", "type", "updatedAt"]
            required: ["correspondence", "recipient", "letters"]
          message:
            type: string
        required: ["data", "message"]

  # <------------------- DELETE Correspondence ------------------->

  CorrespondenceDeleteResponseModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "CorrespondenceDeleteResponseModel${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          data:
            type: "object"
            properties:
              correspondencId:
                type: "string"
                format: "uuid"
              recipientId:
                type: "string"
                format: "uuid"
              letterIds:
                type: "array"
                items:
                  type: "string"
                  format: "uuid"
            required: ["correspondencId", "recipientId", "letterIds"]
          message:
            type: string
        required: ["data", "message"]

Outputs:
  CorrespondenceCreateRequestModelOutput:
    Value: !Ref CorrespondenceCreateRequestModel
    Export:
      Name: !Sub "correspondence-create-request-model-${Environment}"
  CorrespondenceUpdateRequestModelOutput:
    Value: !Ref CorrespondenceUpdateRequestModel
    Export:
      Name: !Sub "correspondence-update-request-model-${Environment}"
  CorrespondenceResponseModelOutput:
    Value: !Ref CorrespondenceResponseModel
    Export:
      Name: !Sub "correspondence-response-model-${Environment}"
  CorrespondenceCreateResponseModelOutput:
    Value: !Ref CorrespondenceCreateResponseModel
    Export:
      Name: !Sub "correspondence-create-response-model-${Environment}"
  CorrespondenceUpdateResponseModelOutput:
    Value: !Ref CorrespondenceUpdateResponseModel
    Export:
      Name: !Sub "correspondence-update-response-model-${Environment}"
  CorrespondenceByIdResponseModelOutput:
    Value: !Ref CorrespondenceByIdResponseModel
    Export:
      Name: !Sub "correspondence-by-id-response-model-${Environment}"
  CorrespondenceDeleteResponseModelOutput:
    Value: !Ref CorrespondenceDeleteResponseModel
    Export:
      Name: !Sub "correspondence-delete-response-model-${Environment}"