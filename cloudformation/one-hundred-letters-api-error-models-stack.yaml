AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Default: "dev"
    Description: "The environment for the deployment (dev or prod)"
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: "Must be either 'dev' or 'prod'."

Mappings:
  EnvCapitalization:
    dev:
      Capitalized: "Dev"
    prod:
      Capitalized: "Prod"

Resources:
  BadRequestError:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "BadRequestError${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          statusCode:
            type: "integer"
          message:
            type: "string"

  InternalServerError:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "InternalServerError${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          statusCode:
            type: "integer"
          message:
            type: "string"

  NotFoundError:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: 
        Fn::ImportValue: 
          !Sub "one-hundred-letters-api-${Environment}"
      ContentType: "application/json"
      Name: !Sub 
        - "NotFoundError${CapitalizedEnv}"
        - CapitalizedEnv: !FindInMap [EnvCapitalization, !Ref Environment, Capitalized]
      Schema:
        $schema: "http://json-schema.org/draft-04/schema#"
        type: "object"
        properties:
          statusCode:
            type: "integer"
          message:
            type: "string"

Outputs:
  BadRequestErrorOutput:
    Value: !Ref BadRequestError
    Export:
      Name: !Sub bad-request-error-${Environment}
  InternalServerErrorOutput:
    Value: !Ref InternalServerError
    Export:
      Name: !Sub internal-server-error-${Environment}
  NotFoundErrorOutput:
    Value: !Ref NotFoundError
    Export:
      Name: !Sub not-found-error-${Environment}
