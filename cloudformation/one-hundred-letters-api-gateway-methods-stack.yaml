AWSTemplateFormatVersion: '2010-09-09'

Resources:
  CorrespondenceGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue CorrespondenceResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCorrespondences/invocations"
      RequestParameters:
        "method.request.querystring.limit": false
        "method.request.querystring.lastEvaluatedKey": false
  
  CorrespondenceCreateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue CorrespondenceResource
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      HttpMethod: POST
      RequestValidatorId: !ImportValue OneHundredLettersValidator
      RequestModels:
        "application/json": !ImportValue CorrespondenceCreateRequestModel
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:createCorrespondence/invocations"
  
  CorrespondenceByIdMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue CorrespondenceByIdResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCorrespondenceById/invocations"
      RequestParameters:
        method.request.path.id: true
  
  CorrespondenceUpdateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue CorrespondenceByIdResource
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      HttpMethod: PUT
      RequestValidatorId: !ImportValue OneHundredLettersValidator
      RequestModels:
        "application/json": !ImportValue CorrespondenceUpdateRequestModel
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:updateCorrespondence/invocations"
      RequestParameters:
        method.request.path.id: true
  
  CorrespondenceDeleteMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue CorrespondenceByIdResource
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deleteCorrespondence/invocations"
      RequestParameters:
        method.request.path.id: true
  
  RecipientsGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue RecipientsResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getRecipients/invocations"
      RequestParameters:
        "method.request.querystring.limit": false
        "method.request.querystring.lastEvaluatedKey": false
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            "application/json": !ImportValue RecipientResponseModel
        - StatusCode: 500
          ResponseModels:
            "application/json": !ImportValue InternalServerError
  
  RecipientByIdMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue RecipientByIdResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getRecipientById/invocations"
      RequestParameters:
        method.request.path.id: true
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            "application/json": !ImportValue RecipientByIdResponseModel
        - StatusCode: 400
          ResponseModels:
            "application/json": !ImportValue BadRequestError
        - StatusCode: 404
          ResponseModels:
            "application/json": !ImportValue NotFoundError
        - StatusCode: 500
          ResponseModels:
            "application/json": !ImportValue InternalServerError
  
  RecipientCreateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue RecipientsResource
      HttpMethod: POST
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      RequestValidatorId: !ImportValue OneHundredLettersValidator
      RequestModels:
        "application/json": !ImportValue RecipientCreateRequestModel
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:createRecipient/invocations"
      MethodResponses:
        - StatusCode: 201
          ResponseModels:
            "application/json": !ImportValue RecipientUpdateResponseModel
        - StatusCode: 400
          ResponseModels:
            "application/json": !ImportValue BadRequestError
        - StatusCode: 500
          ResponseModels:
            "application/json": !ImportValue InternalServerError

  RecipientUpdateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue RecipientByIdResource
      HttpMethod: PUT
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      RequestValidatorId: !ImportValue OneHundredLettersValidator
      RequestModels:
        "application/json": !ImportValue RecipientUpdateRequestModel
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:updateRecipient/invocations"
      RequestParameters:
        method.request.path.id: true
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            "application/json": !ImportValue RecipientUpdateResponseModel
        - StatusCode: 400
          ResponseModels:
            "application/json": !ImportValue BadRequestError
        - StatusCode: 404
          ResponseModels:
            "application/json": !ImportValue NotFoundError
        - StatusCode: 500
          ResponseModels:
            "application/json": !ImportValue InternalServerError
  
  RecipientDeleteMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue RecipientByIdResource
      HttpMethod: DELETE
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deleteRecipient/invocations"
      RequestParameters:
        method.request.path.id: true
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            "application/json": !ImportValue RecipientDeleteResponseModel
        - StatusCode: 400
          ResponseModels:
            "application/json": !ImportValue BadRequestError
        - StatusCode: 404
          ResponseModels:
            "application/json": !ImportValue NotFoundError
        - StatusCode: 500
          ResponseModels:
            "application/json": !ImportValue InternalServerError
  
  LettersGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue LettersResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getLetters/invocations"
      RequestParameters:
        "method.request.querystring.limit": false
        "method.request.querystring.lastEvaluatedKey": false
  
  LetterByIdMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue LetterByIdResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getLetterById/invocations"
      RequestParameters:
        method.request.path.id: true

  LetterCreateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue LettersResource
      HttpMethod: POST
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      RequestValidatorId: !ImportValue OneHundredLettersValidator
      RequestModels:
        "application/json": !ImportValue LetterCreateRequestModel
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:createLetter/invocations"

  LetterUpdateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue LetterByIdResource
      HttpMethod: PUT
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      RequestValidatorId: !ImportValue OneHundredLettersValidator
      RequestModels:
        "application/json": !ImportValue LetterUpdateRequestModel
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:updateLetter/invocations"
      RequestParameters:
        method.request.path.id: true

  LetterDeleteMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !ImportValue OneHundredLettersApi
      ResourceId: !ImportValue LetterByIdResource
      HttpMethod: DELETE
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !ImportValue OneHundredLettersAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deleteLetter/invocations"
      RequestParameters:
        method.request.path.id: true
