name: Deploy Lambda Manually

on:
  workflow_dispatch:
    inputs:
      lambda_function:
        description: "Select a Lambda function to deploy..."
        required: true
        type: choice
        options:
          - createCorrespondence
          - deleteCorrespondence
          - getCorrespondences
          - getCorrespondencesById
          - getRecipientById
          - getRecipients
          - updateCorrespondence

jobs:
  deploy-lambda:
    name: Deploy Lambda Manually
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: GithubLambdaDeployment
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600

      - name: Build & Package Lambda
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          cd routes/$FUNCTION_NAME
          npm install
          npm run build
          npm run package
          cd ../../  # Go back to root directory

      - name: Upload Lambda to S3
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          aws s3 cp "routes/$FUNCTION_NAME/dist/$FUNCTION_NAME.zip" "s3://100-letters-project-api/$FUNCTION_NAME.zip"

      - name: Check for Existing Stack
        id: check_stack
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          echo "Checking if CloudFormation stack exists for Lambda: $FUNCTION_NAME"

          # Use 'aws cloudformation wait stack-exists' to check if the stack exists
          aws cloudformation wait stack-exists --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack"
          if [ $? -eq 0 ]; then
            echo "Stack exists, ready to update."
            echo "stack_exists=true" >> $GITHUB_ENV
          else
            echo "Stack not found, creating it..."
            echo "stack_exists=false" >> $GITHUB_ENV
          fi

      - name: Deploy Lambda using CloudFormation
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          TEMPLATE_PATH="routes/$FUNCTION_NAME/template.yaml"
          
          echo "Deploying Lambda function with CloudFormation: $FUNCTION_NAME"
          
          # Deploy the stack (create or update)
          if [ "$stack_exists" == "true" ]; then
            echo "Updating CloudFormation stack for Lambda: $FUNCTION_NAME"
            aws cloudformation update-stack --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack" \
              --template-body file://$TEMPLATE_PATH \
              --capabilities CAPABILITY_IAM --region us-west-2
          else
            echo "Creating CloudFormation stack for Lambda: $FUNCTION_NAME"
            aws cloudformation create-stack --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack" \
              --template-body file://$TEMPLATE_PATH \
              --capabilities CAPABILITY_IAM --region us-west-2
          fi
