name: Deploy Lambda Manually

on:
  workflow_dispatch:
    inputs:
      lambda_function:
        description: "Select a Lambda function to deploy..."
        required: true
        type: choice
        options:
          - createCorrespondence
          - deleteCorrespondence
          - getCorrespondences
          - getCorrespondencesById
          - getRecipientById
          - getRecipients
          - updateCorrespondence

jobs:
  deploy-lambda:
    name: Deploy Lambda Manually
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: GithubLambdaDeployment
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600

      - name: Build & Package Lambda
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          cd routes/$FUNCTION_NAME
          npm install
          npm run build
          npm run package
          cd ../../  # Go back to root directory

      - name: Upload Lambda to S3
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          aws s3 cp "routes/$FUNCTION_NAME/dist/$FUNCTION_NAME.zip" "s3://100-letters-project-api/$FUNCTION_NAME.zip"

      - name: Check for Existing Stack
        id: check_stack
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          echo "Checking if CloudFormation stack exists for Lambda: $FUNCTION_NAME"
          
          # Disable exit on error temporarily
          set +e
          
          # Try to describe the stack
          aws cloudformation describe-stacks --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack" --output text
          
          # Capture the exit code
          STACK_EXISTS=$?
          
          # Re-enable exit on error
          set -e

          if [ $STACK_EXISTS -eq 0 ]; then
            # If the describe-stacks command succeeded, the stack exists
            echo "Stack exists, ready to check for changes."
            echo "stack_exists=true" >> $GITHUB_ENV
          else
            # If the exit code is non-zero, the stack doesn't exist
            echo "Stack not found, creating it..."
            echo "stack_exists=false" >> $GITHUB_ENV
          fi

      - name: Create Change Set (if stack exists)
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          TEMPLATE_PATH="routes/$FUNCTION_NAME/template.yaml"
          CHANGE_SET_NAME="my-change-set"
          
          echo "Creating Change Set for Lambda function: $FUNCTION_NAME"
          
          if [ "$stack_exists" == "true" ]; then
            # Create a change set if the stack exists
            aws cloudformation create-change-set \
              --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack" \
              --template-body file://$TEMPLATE_PATH \
              --change-set-name "$CHANGE_SET_NAME" \
              --capabilities CAPABILITY_IAM --region us-west-2
          fi

      - name: Check if Change Set has Changes
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          CHANGE_SET_NAME="my-change-set"
          
          echo "Checking if Change Set has any changes for Lambda: $FUNCTION_NAME"
          
          if [ "$stack_exists" == "true" ]; then
            # Get the status of the change set
            CHANGE_SET_STATUS=$(aws cloudformation describe-change-set \
              --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack" \
              --change-set-name "$CHANGE_SET_NAME" \
              --query 'ChangeSet.Status' --output text --region us-west-2)
            
            if [ "$CHANGE_SET_STATUS" == "CREATE_COMPLETE" ]; then
              # If changes exist, execute the change set
              echo "Changes detected, executing Change Set for Lambda: $FUNCTION_NAME"
              aws cloudformation execute-change-set \
                --change-set-name "$CHANGE_SET_NAME" \
                --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack" \
                --region us-west-2
            else
              echo "No changes detected, skipping update for Lambda: $FUNCTION_NAME"
            fi
          fi

      - name: Create CloudFormation Stack (if stack doesn't exist)
        run: |
          FUNCTION_NAME="${{ github.event.inputs.lambda_function }}"
          TEMPLATE_PATH="routes/$FUNCTION_NAME/template.yaml"
          
          echo "Creating CloudFormation stack for Lambda: $FUNCTION_NAME"
          
          if [ "$stack_exists" == "false" ]; then
            aws cloudformation create-stack \
              --stack-name "one-hundred-letters-route-$FUNCTION_NAME-stack" \
              --template-body file://$TEMPLATE_PATH \
              --capabilities CAPABILITY_IAM --region us-west-2
          fi
