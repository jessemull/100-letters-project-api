name: Deploy Lambdas on Merge

on:
  push:
    branches:
      - main

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm ci

      - name: Run Linting
        run: |
          npm run lint:all:fix

      - name: Run Jest Tests
        run: |
          npm run test:all

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 7

      - name: Coverage Threshold Check
        run: |
          if [[ $(grep "Statements" coverage/lcov-report/index.html | awk '{print $4}' | tr -d '%') -lt 80 ]]; then
            echo "Code coverage is below threshold. Please update test coverage and try again."
            exit 1
          fi

  deploy-lambdas:
    name: Deploy Lambdas
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: GithubLambdaDeployment
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: List Changed Files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Listing all changed files:"
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Check Modified Files
        id: check_files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          changed_functions=""
          ROUTE_NAMES=$(ls src/routes)
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file"
            for route in $ROUTE_NAMES; do
              if [[ $file =~ ^src/routes/$route/ ]]; then
                FUNCTION_NAME=$(echo "$file" | cut -d'/' -f3)
                changed_functions="$changed_functions $FUNCTION_NAME"
              fi
            done
          done
          changed_functions=$(echo "$changed_functions" | tr ' ' '\n' | sort -u | tr '\n' ' ')
          if [ -z "$changed_functions" ]; then
            echo "No lambda function changes detected. Skipping deployment."
            exit 0
          else
            echo "Lambdas: $changed_functions"
            echo "changed_functions=$changed_functions" >> $GITHUB_ENV
          fi

      - name: Deploy Lambdas
        if: env.changed_functions != ''
        run: |
          changed_functions="${{ env.changed_functions }}"
          for lambda in $changed_functions; do
            echo "Deploying $lambda..."
            curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/manual.yml/dispatches \
              -H "Authorization: Bearer ${{ secrets.ACTIONS_PAT }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d '{"ref":"${{ github.ref }}","inputs":{"lambda_function":"'"$lambda"'","environment":"dev"}}'
          done
