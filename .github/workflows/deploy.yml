name: Lambda Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies for all Lambdas
        run: npm install

      - name: Check for changed Lambda functions
        id: check_changes
        run: |
          # Get the list of changed lambdas by comparing the current and previous commits
          CHANGED_LAMBDAS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^lambdas/" | cut -d'/' -f2 | sort -u | uniq)
          
          # Print changed lambdas for debugging
          echo "Changed Lambdas: $CHANGED_LAMBDAS"
          
          # If no lambdas were changed, stop the process
          if [ -z "$CHANGED_LAMBDAS" ]; then
            echo "No Lambdas changed."
            exit 0
          fi
          
          # Export the changed lambdas to the environment
          echo "CHANGED_LAMBDAS=$CHANGED_LAMBDAS" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::YOUR_ACCOUNT_ID:role/GitHubActionsRole  # The role you created in CloudFormation
          role-session-name: GithubLambdaDeployment
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload to S3 and Deploy
        run: |
          S3_BUCKET="100-letters-project-api"
          for lambda in ${{ env.CHANGED_LAMBDAS }}; do
            echo "Building and Deploying $lambda"
            cd lambdas/$lambda
            npm install
            npm run build
            zip -r dist/$lambda.zip dist/
            S3_KEY="lambdas/$lambda-$(date +%s).zip"
            aws s3 cp dist/$lambda.zip s3://$S3_BUCKET/$S3_KEY
            aws lambda update-function-code --function-name $lambda --s3-bucket $S3_BUCKET --s3-key $S3_KEY
            cd ../..
          done
